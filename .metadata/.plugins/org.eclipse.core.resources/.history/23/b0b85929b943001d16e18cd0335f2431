package kr.or.board.controller;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import kr.or.board.model.service.BoardService;
import kr.or.board.model.vo.Board;
import kr.or.board.model.vo.FileVO;

@Controller
public class BoardController {
	@Autowired
	private BoardService service;

	public BoardController() {
		super();
		System.out.println("BoardController생성");
	}
	
	@RequestMapping(value="boardList.do")
	public String boardList(Model model) {
		ArrayList<Board> list = service.selectAllBoard();
		model.addAttribute("list", list);
		return "board/boardList";
	}
	
	@RequestMapping(value="boardWriteFrm.do")
	public String boardWriteFrm(Model model, String memberId) {
		model.addAttribute("memberId", memberId);
		return "board/boardWriteFrm";
	}
	
	@RequestMapping(value="boardWrite.do")
	public String boardWrite(Board b, Model model) {
		int result = service.insertBoard(b);
		if(result>0) {
			model.addAttribute("message","게시글이 등록되었습니다.");
		}else {
			model.addAttribute("message","게시글 작성에 실패했습니다.");
		}
		return "board/boardWriteResult";
	}
	
	@RequestMapping(value="boardWriteFrm2.do")
	public String boardWriteFrm2(Model model, String memberId) {
		model.addAttribute("memberId", memberId);
		return "board/boardWriteFrm2";
	}
	
	@RequestMapping(value="/boardWrite2.do")
	public String boardWrite2(Board b, MultipartFile[] boardFile, HttpServletRequest request) {
		//파일목록을 저장할 리스트 생성
		ArrayList<FileVO> list = new ArrayList<FileVO>();
		//MultipartFile[]은 jsp에서 첨부한 파일 갯수만큼 길이가 생성
		//단, 첨부파일은 한 개도 첨부하지 않더라도 배열의 길이는 기본적으로 1
		//첨부파일이 없는 경우 배열 첫번째 인덱스의 value비어있음
		if(boardFile[0].isEmpty()) {
			//첨부파일이 없는 경우 수행할 로직 없음
		}else {
			//첨부파일이 있는 경우 파일업로드 수행
			//1. 파일업로드 경로 설정(getRealPath()까지가 webapp폴더)
			String savepath = request.getSession().getServletContext().getRealPath("/resources/upload/board/");
			System.out.println(savepath);
		}
		return "redirect:/boardList.do";
	}
	
	@RequestMapping(value="boardView.do")
	public String boardView(Model model, int boardNo) {
		Board b = service.selectOneBoard(boardNo);
		model.addAttribute("b",b);
		return "board/boardView";
	}
	
	@RequestMapping(value="updateBoardFrm.do")
	public String updateBoard(Model model, Board b) {
		model.addAttribute("b",b);
		return "board/updateBoardFrm";
	}
	
}
