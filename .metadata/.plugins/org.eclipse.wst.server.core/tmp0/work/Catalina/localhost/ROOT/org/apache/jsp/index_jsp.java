/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-10-13 08:41:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1664843467030L));
    _jspx_dependants.put("jar:file:/C:/Users/user1/Documents/spring-workspace/05_Spring_Websocket/src/main/webapp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.1.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>05_Spring_WebSocket</h1>\r\n");
      out.write("	");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	<hr>\r\n");
      out.write("	<button id=\"allMemberAjax\">전체회원조회(AJAX)</button>\r\n");
      out.write("	<div id=\"ajaxResult\"></div>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<div id=\"visitorList\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	$(\"#allMemberAjax\").on(\"click\",function(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"/ajaxAllMember.do\",\r\n");
      out.write("			success : function(data){\r\n");
      out.write("				const table = $(\"<fieldset><legend>회원목록</legend><table>\");\r\n");
      out.write("				const titleTr = $(\"<tr>\");\r\n");
      out.write("				titleTr.html(\"<th style='width:10%;'>번호</th><th style='width:25%;'>아이디</th><th style='width:25%;'>이름</th><th style='width:40%;'>전화번호</th></tr>\");\r\n");
      out.write("				table.append(titleTr);\r\n");
      out.write("				for(let i=0;i<data.length;i++){\r\n");
      out.write("					const tr = $(\"<tr style='text-align:center;'>\");\r\n");
      out.write("					tr.append(\"<td>\"+data[i].memberNo+\"</td>\");\r\n");
      out.write("					tr.append(\"<td>\"+data[i].memberId+\"</td> \");\r\n");
      out.write("					tr.append(\"<td>\"+data[i].memberName+\"</td> \");\r\n");
      out.write("					tr.append(\"<td>\"+data[i].phone+\"</td>\");\r\n");
      out.write("					table.append(tr);\r\n");
      out.write("				}\r\n");
      out.write("				const tableEnd = $(\"</table></fieldset>\");\r\n");
      out.write("				$(\"#ajaxResult\").html(table);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function deleteConfirm()  {\r\n");
      out.write("		let msg = confirm(\"회원탈퇴 시 회원정보가 모두 사라집니다. 탈퇴하시겠습니까?\");\r\n");
      out.write("		if(msg){\r\n");
      out.write("			location.href=\"/deleteMember.do\";\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$(function getIp() {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"/getIp.do\",\r\n");
      out.write("			success : function(data){\r\n");
      out.write("				console.log(data);\r\n");
      out.write("				if(data!=\"192.168.10.38\"){\r\n");
      out.write("					const age = prompt(\"당신의 나이를 입력해주세요.\", 24);\r\n");
      out.write("					for (let i = 0; i < age; i++) {\r\n");
      out.write("						alert(\"당신의 아이피는 [ \"+data+\" ] 입니다.\");\r\n");
      out.write("						alert(\"ㅎㅎ\");\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("				getVisitorList();\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function getVisitorList() {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"/getVisitorList.do\",\r\n");
      out.write("			success : function(data){\r\n");
      out.write("				console.log(data);\r\n");
      out.write("				const table = $(\"<fieldset><legend>안녕하세요.</legend><table>\");\r\n");
      out.write("				const titleTr = $(\"<tr>\");\r\n");
      out.write("				titleTr.html(\"<th>방문자</th><th></th><th>방문일</th>\");\r\n");
      out.write("				table.append(titleTr);\r\n");
      out.write("				for(let i=0;i<data.length;i++){\r\n");
      out.write("					const tr = $(\"<tr>\");\r\n");
      out.write("					tr.append(\"<td>\"+data[i].visitorIp+\"</td>\");\r\n");
      out.write("					tr.append(\"<td>\"+\"ㅡㅡㅡ\"+\"</td>\");\r\n");
      out.write("					tr.append(\"<td>\"+data[i].visitDate+\"</td> \");\r\n");
      out.write("					table.append(tr);\r\n");
      out.write("				}\r\n");
      out.write("				const tableEnd = $(\"</table></fieldset>\");\r\n");
      out.write("				$(\"#visitorList\").html(table);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("		");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /index.jsp(14,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.m }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<form action=\"/login.do\" method=\"post\">\r\n");
          out.write("				<fieldset>\r\n");
          out.write("					<legend>로그인</legend>\r\n");
          out.write("					아이디 : <input type=\"text\" name=\"memberId\"><br>\r\n");
          out.write("					비밀번호 : <input type=\"password\" name=\"memberPw\"><br>\r\n");
          out.write("					<input type=\"submit\" value=\"로그인\">\r\n");
          out.write("				</fieldset>\r\n");
          out.write("			</form>\r\n");
          out.write("			<h3><a href=\"/joinFrm.do\">회원가입</a></h3>\r\n");
          out.write("			<h3><a href=\"/searchIdPw.do\">아이디/비밀번호찾기</a></h3>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<form action=\"/searchMemberId.do\">\r\n");
          out.write("				아이디 : <input type=\"text\" name=\"memberId\" placeholder=\"아이디 검색\">\r\n");
          out.write("				<input type=\"submit\" value=\"회원조회\">\r\n");
          out.write("			</form>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<h3><a href=\"/boardList.do?reqPage=1\">게시판</a></h3>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<h2>[");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.m.memberName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("]님, 안녕하세요.</h2>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<h3><a href=\"/allMemberChat.do\">전체채팅</a></h3>\r\n");
          out.write("			<h3><a href=\"/dmMain.do\">쪽지함가기</a></h3>\r\n");
          out.write("			<h3><a href=\"/boardList.do?reqPage=1\">게시판</a></h3>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<h3><a href=\"/selectAllMember.do\">전체회원조회</a></h3>\r\n");
          out.write("			<h3><a href=\"/logout.do\">로그아웃</a></h3>\r\n");
          out.write("			<h3><a href=\"/mypage.do\">마이페이지</a></h3>\r\n");
          out.write("			<h3><a onclick=\"deleteConfirm();\">회원탈퇴</a></h3>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<form action=\"/searchMemberId.do\">\r\n");
          out.write("				아이디 : <input type=\"text\" name=\"memberId\" placeholder=\"아이디 검색\">\r\n");
          out.write("				<input type=\"submit\" value=\"회원조회\">\r\n");
          out.write("			</form>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<form action=\"/searchMemberName.do\">\r\n");
          out.write("				이름 : <input type=\"text\" name=\"memberName\" placeholder=\"이름 검색\">\r\n");
          out.write("				<input type=\"submit\" value=\"회원조회\">\r\n");
          out.write("			</form>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<form action=\"/searchMember1.do\" method=\"post\">\r\n");
          out.write("				<select name=\"type\">\r\n");
          out.write("					<option value=\"id\">아이디</option>\r\n");
          out.write("					<option value=\"name\">이름</option>\r\n");
          out.write("				</select>\r\n");
          out.write("				<input type=\"text\" name=\"keyword\" placeholder=\"검색옵션 선택\">\r\n");
          out.write("				<input type=\"submit\" value=\"회원조회\">\r\n");
          out.write("			</form>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<h3>아이디 or 이름으로 검색</h3>\r\n");
          out.write("			<p>아이디만 입력하고 검색하는 경우 아이디로 조회, 이름만 입력하고 검색하는 경우 이름으로 조회,\r\n");
          out.write("			둘다 입력하고 검색하는 경우 두개 and로 조회</p>\r\n");
          out.write("			<form action=\"/searchMember2.do\" method=\"post\">\r\n");
          out.write("				<input type=\"text\" name=\"memberId\" placeholder=\"아이디 입력\"><br>\r\n");
          out.write("				<input type=\"text\" name=\"memberName\" placeholder=\"이름 입력\"><br>\r\n");
          out.write("				<input type=\"submit\" value=\"회원조회\" style=\"width:177px\">\r\n");
          out.write("			</form>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<h3><a href=\"/idList.do\">전체회원 아이디 목록</a></h3>\r\n");
          out.write("			<hr>\r\n");
          out.write("			<h3><a href=\"/searchMember4.do\">회원번호 10 미만인 회원조회</a></h3>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
